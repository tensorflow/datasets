name: Unittests

on:
  workflow_dispatch:
  push:
    # Do not trigger tests for documentation or markdown docs.
    paths-ignore:
      - 'docs/**'
      - '*.md'

# Cancel in-progress runs for the current workflow if not on the main branch
# (as it mark the unittests as failed).
# Conditionals to concurrent are based on the solution proposed in this link:
# https://github.community/t/concurrency-cancel-in-progress-but-not-when-ref-is-master/194707
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref != 'refs/heads/master' || github.run_number }}
  # Cancel only PR intermediate builds
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  pytest-job:
    # For merged PR, activate testing only on the master branch, based on:
    # https://github.community/t/trigger-workflow-only-on-pull-request-merge/17359
    if: |
      github.ref == 'refs/heads/master'
      || (
        github.event.action != 'closed'
        && github.event.pull_request.merged == false)

    name: 'Core TFDS tests on ${{ matrix.tf-version }}'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      # Do not cancel in-progress jobs if any matrix job fails.
      fail-fast: false
      matrix:
        tf-version: ['tensorflow', 'tf-nightly']
        shard-id: [0, 1, 2, 3]

    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/setup
      with:
        tf-version: ${{ matrix.tf-version }}

    # Run tests
    # Ignores:
    # * Nsynth is run in isolation due to dependency conflict (crepe).
    # * Lsun tests is disabled because the tensorflow_io used in open-source
    #   is linked to static libraries compiled again specific TF version, which
    #   makes test fails with linking error (libtensorflow_io_golang.so).
    # * imagenet2012_corrupted requires imagemagick binary.
    # * test_utils.py, test_feature.py is not a test file.
    # * import_without_tf_test.py, because the test relies on TensorFlow not being imported.
    # * github_api is run separately to not overuse API quota.
    - name: Run core tests
      run: |
        pytest --durations=100 -vv -n auto --shard-id=${{ matrix.shard-id }} --num-shards=4 \
          --ignore="tensorflow_datasets/datasets/nsynth/nsynth_dataset_builder_test.py" \
          --ignore="tensorflow_datasets/core/features/features_test.py" \
          --ignore="tensorflow_datasets/testing/test_utils.py" \
          --ignore="tensorflow_datasets/image/lsun_test.py" \
          --ignore="tensorflow_datasets/datasets/imagenet2012_corrupted/imagenet2012_corrupted_dataset_builder_test.py" \
          --ignore="tensorflow_datasets/scripts/documentation/build_api_docs_test.py" \
          --ignore="tensorflow_datasets/import_without_tf_test.py" \
          --ignore="tensorflow_datasets/core/github_api/github_path_test.py"

  githubapitest-job:
    # For merged PR, activate testing only on the master branch.
    if: |
      github.ref == 'refs/heads/master'
      || (
        github.event.action != 'closed'
        && github.event.pull_request.merged == false)

    name: 'Github API tests'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/setup
      with:
        tf-version: tensorflow

    - name: Run Github API tests
      run: pytest --durations=100 -vv -n auto tensorflow_datasets/core/github_api/github_path_test.py

  notebooktest-job:
    # For merged PR, activate testing only on the master branch.
    if: |
      github.ref == 'refs/heads/master'
      || (
        github.event.action != 'closed'
        && github.event.pull_request.merged == false)

    name: 'Notebook tests'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/setup
      with:
        tf-version: tf-nightly

    - run: pip install ipython

    # Test each notebook sequentially.
    - name: Run notebook
      run: |
        ipython kernel install --user --name tfds-notebook
        for notebook in docs/*ipynb
          do
            if [$notebook != "docs/determinism.ipynb"]
            then
              jupyter nbconvert \
                --ExecutePreprocessor.timeout=600 \
                --ExecutePreprocessor.kernel_name=tfds-notebook \
                --to notebook \
                --execute $notebook
            fi
          done
