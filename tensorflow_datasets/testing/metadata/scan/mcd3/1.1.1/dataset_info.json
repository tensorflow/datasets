{
  "citation": "@inproceedings{Lake2018GeneralizationWS,\n  title={Generalization without Systematicity: On the Compositional Skills of\n         Sequence-to-Sequence Recurrent Networks},\n  author={Brenden M. Lake and Marco Baroni},\n  booktitle={ICML},\n  year={2018},\n  url={https://arxiv.org/pdf/1711.00350.pdf},\n}\n@inproceedings{Keysers2020,\n  title={Measuring Compositional Generalization: A Comprehensive Method on\n         Realistic Data},\n  author={Daniel Keysers and Nathanael Sch\"{a}rli and Nathan Scales and\n          Hylke Buisman and Daniel Furrer and Sergii Kashubin and\n          Nikola Momchev and Danila Sinopalnikov and Lukasz Stafiniak and\n          Tibor Tihon and Dmitry Tsarkov and Xiao Wang and Marc van Zee and\n          Olivier Bousquet},\n  note={Additional citation for MCD splits},\n  booktitle={ICLR},\n  year={2020},\n  url={https://arxiv.org/abs/1912.09713.pdf},\n}",
  "description": "SCAN tasks with various splits.\n\nSCAN is a set of simple language-driven navigation tasks for studying\ncompositional learning and zero-shot generalization.\n\nMost splits are described at https://github.com/brendenlake/SCAN. For the MCD\nsplits please see https://arxiv.org/abs/1912.09713.pdf.\n\nBasic usage:\n\n```\ndata = tfds.load('scan/length')\n```\n\nMore advanced example:\n\n```\ndata = tfds.load(\n    'scan',\n    builder_kwargs=dict(\n        config=tfds.text.ScanConfig(\n            name='simple_p8', directory='simple_split/size_variations')))\n```",
  "downloadSize": "18760111",
  "location": {
    "urls": [
      "https://github.com/brendenlake/SCAN"
    ]
  },
  "name": "scan",
  "schema": {
    "feature": [
      {
        "domain": "actions",
        "name": "actions",
        "presence": {
          "minCount": "1",
          "minFraction": 1.0
        },
        "shape": {
          "dim": [
            {
              "size": "1"
            }
          ]
        },
        "type": "BYTES"
      },
      {
        "domain": "commands",
        "name": "commands",
        "presence": {
          "minCount": "1",
          "minFraction": 1.0
        },
        "shape": {
          "dim": [
            {
              "size": "1"
            }
          ]
        },
        "type": "BYTES"
      }
    ],
    "stringDomain": [
      {
        "name": "actions",
        "value": [
          "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT",
          "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT",
          "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT",
          "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT",
          "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT",
          "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT",
          "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT",
          "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT",
          "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT",
          "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT"
        ]
      },
      {
        "name": "commands",
        "value": [
          "walk twice and walk left",
          "walk twice and walk left thrice",
          "walk twice and walk opposite left thrice",
          "walk twice and walk opposite left twice",
          "walk twice and walk opposite right thrice",
          "walk twice and walk opposite right twice",
          "walk twice and walk right",
          "walk twice and walk right thrice",
          "walk twice and walk thrice",
          "walk twice and walk twice"
        ]
      }
    ]
  },
  "splits": [
    {
      "name": "test",
      "numBytes": "281512",
      "shardLengths": [
        "1045"
      ],
      "statistics": {
        "features": [
          {
            "path": {
              "step": [
                "actions"
              ]
            },
            "stringStats": {
              "avgLength": 185.89569,
              "commonStats": {
                "avgNumValues": 1.0,
                "maxNumValues": "1",
                "minNumValues": "1",
                "numNonMissing": "1045",
                "numValuesHistogram": {
                  "buckets": [
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    }
                  ],
                  "type": "QUANTILES"
                },
                "totNumValues": "1045"
              },
              "rankHistogram": {
                "buckets": [
                  {
                    "label": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT",
                    "sampleCount": 5.0
                  },
                  {
                    "highRank": "1",
                    "label": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT",
                    "lowRank": "1",
                    "sampleCount": 5.0
                  },
                  {
                    "highRank": "2",
                    "label": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK",
                    "lowRank": "2",
                    "sampleCount": 4.0
                  },
                  {
                    "highRank": "3",
                    "label": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN",
                    "lowRank": "3",
                    "sampleCount": 4.0
                  },
                  {
                    "highRank": "4",
                    "label": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP",
                    "lowRank": "4",
                    "sampleCount": 4.0
                  },
                  {
                    "highRank": "5",
                    "label": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT",
                    "lowRank": "5",
                    "sampleCount": 4.0
                  },
                  {
                    "highRank": "6",
                    "label": "I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT",
                    "lowRank": "6",
                    "sampleCount": 4.0
                  },
                  {
                    "highRank": "7",
                    "label": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT",
                    "lowRank": "7",
                    "sampleCount": 4.0
                  },
                  {
                    "highRank": "8",
                    "label": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT",
                    "lowRank": "8",
                    "sampleCount": 4.0
                  },
                  {
                    "highRank": "9",
                    "label": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT",
                    "lowRank": "9",
                    "sampleCount": 4.0
                  }
                ]
              },
              "topValues": [
                {
                  "frequency": 5.0,
                  "value": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT"
                },
                {
                  "frequency": 5.0,
                  "value": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT"
                },
                {
                  "frequency": 4.0,
                  "value": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK"
                },
                {
                  "frequency": 4.0,
                  "value": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN"
                },
                {
                  "frequency": 4.0,
                  "value": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP"
                },
                {
                  "frequency": 4.0,
                  "value": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT"
                },
                {
                  "frequency": 4.0,
                  "value": "I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT"
                },
                {
                  "frequency": 4.0,
                  "value": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT"
                },
                {
                  "frequency": 4.0,
                  "value": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT"
                },
                {
                  "frequency": 4.0,
                  "value": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT"
                }
              ],
              "unique": "717"
            },
            "type": "STRING"
          },
          {
            "path": {
              "step": [
                "commands"
              ]
            },
            "stringStats": {
              "avgLength": 43.329185,
              "commonStats": {
                "avgNumValues": 1.0,
                "maxNumValues": "1",
                "minNumValues": "1",
                "numNonMissing": "1045",
                "numValuesHistogram": {
                  "buckets": [
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 104.5
                    }
                  ],
                  "type": "QUANTILES"
                },
                "totNumValues": "1045"
              },
              "rankHistogram": {
                "buckets": [
                  {
                    "label": "walk twice",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "1",
                    "label": "walk right twice and walk opposite right",
                    "lowRank": "1",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "2",
                    "label": "walk right twice and walk opposite left",
                    "lowRank": "2",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "3",
                    "label": "walk right twice and walk left twice",
                    "lowRank": "3",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "4",
                    "label": "walk right twice and turn left twice",
                    "lowRank": "4",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "5",
                    "label": "walk right twice and turn around right thrice",
                    "lowRank": "5",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "6",
                    "label": "walk right twice and run opposite left",
                    "lowRank": "6",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "7",
                    "label": "walk right twice and run around left thrice",
                    "lowRank": "7",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "8",
                    "label": "walk right twice and look opposite right",
                    "lowRank": "8",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "9",
                    "label": "walk right twice and look around left thrice",
                    "lowRank": "9",
                    "sampleCount": 1.0
                  }
                ]
              },
              "topValues": [
                {
                  "frequency": 1.0,
                  "value": "walk twice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk right twice and walk opposite right"
                },
                {
                  "frequency": 1.0,
                  "value": "walk right twice and walk opposite left"
                },
                {
                  "frequency": 1.0,
                  "value": "walk right twice and walk left twice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk right twice and turn left twice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk right twice and turn around right thrice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk right twice and run opposite left"
                },
                {
                  "frequency": 1.0,
                  "value": "walk right twice and run around left thrice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk right twice and look opposite right"
                },
                {
                  "frequency": 1.0,
                  "value": "walk right twice and look around left thrice"
                }
              ],
              "unique": "1045"
            },
            "type": "STRING"
          }
        ],
        "numExamples": "1045"
      }
    },
    {
      "name": "train",
      "numBytes": "1683887",
      "shardLengths": [
        "8365"
      ],
      "statistics": {
        "features": [
          {
            "path": {
              "step": [
                "actions"
              ]
            },
            "stringStats": {
              "avgLength": 121.21291,
              "commonStats": {
                "avgNumValues": 1.0,
                "maxNumValues": "1",
                "minNumValues": "1",
                "numNonMissing": "8365",
                "numValuesHistogram": {
                  "buckets": [
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    }
                  ],
                  "type": "QUANTILES"
                },
                "totNumValues": "8365"
              },
              "rankHistogram": {
                "buckets": [
                  {
                    "label": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT",
                    "sampleCount": 12.0
                  },
                  {
                    "highRank": "1",
                    "label": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT",
                    "lowRank": "1",
                    "sampleCount": 12.0
                  },
                  {
                    "highRank": "2",
                    "label": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT",
                    "lowRank": "2",
                    "sampleCount": 10.0
                  },
                  {
                    "highRank": "3",
                    "label": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT",
                    "lowRank": "3",
                    "sampleCount": 10.0
                  },
                  {
                    "highRank": "4",
                    "label": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT",
                    "lowRank": "4",
                    "sampleCount": 9.0
                  },
                  {
                    "highRank": "5",
                    "label": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT",
                    "lowRank": "5",
                    "sampleCount": 9.0
                  },
                  {
                    "highRank": "6",
                    "label": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT",
                    "lowRank": "6",
                    "sampleCount": 8.0
                  },
                  {
                    "highRank": "7",
                    "label": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT",
                    "lowRank": "7",
                    "sampleCount": 8.0
                  },
                  {
                    "highRank": "8",
                    "label": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT",
                    "lowRank": "8",
                    "sampleCount": 8.0
                  },
                  {
                    "highRank": "9",
                    "label": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT",
                    "lowRank": "9",
                    "sampleCount": 8.0
                  }
                ]
              },
              "topValues": [
                {
                  "frequency": 12.0,
                  "value": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT"
                },
                {
                  "frequency": 12.0,
                  "value": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT"
                },
                {
                  "frequency": 10.0,
                  "value": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT"
                },
                {
                  "frequency": 10.0,
                  "value": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT"
                },
                {
                  "frequency": 9.0,
                  "value": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT"
                },
                {
                  "frequency": 9.0,
                  "value": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT"
                },
                {
                  "frequency": 8.0,
                  "value": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT"
                },
                {
                  "frequency": 8.0,
                  "value": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT"
                },
                {
                  "frequency": 8.0,
                  "value": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT"
                },
                {
                  "frequency": 8.0,
                  "value": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT"
                }
              ],
              "unique": "3837"
            },
            "type": "STRING"
          },
          {
            "path": {
              "step": [
                "commands"
              ]
            },
            "stringStats": {
              "avgLength": 40.435505,
              "commonStats": {
                "avgNumValues": 1.0,
                "maxNumValues": "1",
                "minNumValues": "1",
                "numNonMissing": "8365",
                "numValuesHistogram": {
                  "buckets": [
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    },
                    {
                      "highValue": 1.0,
                      "lowValue": 1.0,
                      "sampleCount": 836.5
                    }
                  ],
                  "type": "QUANTILES"
                },
                "totNumValues": "8365"
              },
              "rankHistogram": {
                "buckets": [
                  {
                    "label": "walk twice and walk twice",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "1",
                    "label": "walk twice and walk thrice",
                    "lowRank": "1",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "2",
                    "label": "walk twice and walk right thrice",
                    "lowRank": "2",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "3",
                    "label": "walk twice and walk right",
                    "lowRank": "3",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "4",
                    "label": "walk twice and walk opposite right twice",
                    "lowRank": "4",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "5",
                    "label": "walk twice and walk opposite right thrice",
                    "lowRank": "5",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "6",
                    "label": "walk twice and walk opposite left twice",
                    "lowRank": "6",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "7",
                    "label": "walk twice and walk opposite left thrice",
                    "lowRank": "7",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "8",
                    "label": "walk twice and walk left thrice",
                    "lowRank": "8",
                    "sampleCount": 1.0
                  },
                  {
                    "highRank": "9",
                    "label": "walk twice and walk left",
                    "lowRank": "9",
                    "sampleCount": 1.0
                  }
                ]
              },
              "topValues": [
                {
                  "frequency": 1.0,
                  "value": "walk twice and walk twice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk twice and walk thrice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk twice and walk right thrice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk twice and walk right"
                },
                {
                  "frequency": 1.0,
                  "value": "walk twice and walk opposite right twice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk twice and walk opposite right thrice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk twice and walk opposite left twice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk twice and walk opposite left thrice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk twice and walk left thrice"
                },
                {
                  "frequency": 1.0,
                  "value": "walk twice and walk left"
                }
              ],
              "unique": "8365"
            },
            "type": "STRING"
          }
        ],
        "numExamples": "8365"
      }
    }
  ],
  "supervisedKeys": {
    "input": "commands",
    "output": "actions"
  },
  "version": "1.1.1"
}