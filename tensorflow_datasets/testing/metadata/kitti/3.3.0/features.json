{
    "pythonClassName": "tensorflow_datasets.core.features.features_dict.FeaturesDict",
    "featuresDict": {
        "features": {
            "image/file_name": {
                "pythonClassName": "tensorflow_datasets.core.features.text_feature.Text",
                "text": {}
            },
            "image": {
                "pythonClassName": "tensorflow_datasets.core.features.image_feature.Image",
                "image": {
                    "shape": {
                        "dimensions": [
                            "-1",
                            "-1",
                            "3"
                        ]
                    },
                    "dtype": "uint8"
                }
            },
            "objects": {
                "pythonClassName": "tensorflow_datasets.core.features.sequence_feature.Sequence",
                "sequence": {
                    "feature": {
                        "pythonClassName": "tensorflow_datasets.core.features.features_dict.FeaturesDict",
                        "featuresDict": {
                            "features": {
                                "occluded": {
                                    "pythonClassName": "tensorflow_datasets.core.features.class_label_feature.ClassLabel",
                                    "classLabel": {
                                        "numClasses": "4"
                                    },
                                    "description": "Integer (0,1,2,3) indicating occlusion state: 0 = fully visible, 1 = partly occluded2 = largely occluded, 3 = unknown"
                                },
                                "truncated": {
                                    "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                    "tensor": {
                                        "shape": {},
                                        "dtype": "float32",
                                        "encoding": "none"
                                    },
                                    "description": "Float from 0 (non-truncated) to 1 (truncated), wheretruncated refers to the object leaving image boundaries"
                                },
                                "type": {
                                    "pythonClassName": "tensorflow_datasets.core.features.class_label_feature.ClassLabel",
                                    "classLabel": {
                                        "numClasses": "8"
                                    },
                                    "description": "The type of object, e.g. 'Car' or 'Van'"
                                },
                                "rotation_y": {
                                    "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                    "tensor": {
                                        "shape": {},
                                        "dtype": "float32",
                                        "encoding": "none"
                                    },
                                    "description": "Rotation ry around Y-axis in camera coordinates [-pi..pi]"
                                },
                                "bbox": {
                                    "pythonClassName": "tensorflow_datasets.core.features.bounding_boxes.BBoxFeature",
                                    "boundingBox": {
                                        "shape": {
                                            "dimensions": [
                                                "4"
                                            ]
                                        },
                                        "dtype": "float32"
                                    },
                                    "description": "2D bounding box of object in the image"
                                },
                                "alpha": {
                                    "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                    "tensor": {
                                        "shape": {},
                                        "dtype": "float32",
                                        "encoding": "none"
                                    },
                                    "description": "Observation angle of object, ranging [-pi..pi]"
                                },
                                "dimensions": {
                                    "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                    "tensor": {
                                        "shape": {
                                            "dimensions": [
                                                "3"
                                            ]
                                        },
                                        "dtype": "float32",
                                        "encoding": "none"
                                    },
                                    "description": "3D object dimensions: height, width, length (in meters)"
                                },
                                "location": {
                                    "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                    "tensor": {
                                        "shape": {
                                            "dimensions": [
                                                "3"
                                            ]
                                        },
                                        "dtype": "float32",
                                        "encoding": "none"
                                    },
                                    "description": "3D object location x,y,z in camera coordinates (in meters)"
                                }
                            }
                        }
                    },
                    "length": "-1"
                }
            }
        }
    }
}